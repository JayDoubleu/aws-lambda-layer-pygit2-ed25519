name: Build and release
on:
  push:
    branches:
    - devel

jobs:
  build_and_release:
    strategy:
      matrix:
        python_versions: [3.8.0,3.8.1,3.8.2,3.8.3,3.8.4,3.8.5]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: Docker build
      run: docker build --build-arg PYTHON_VERSION=${{ matrix.python_versions }} -t pygit2-lambda-layer .

    - name: Extract lambda layer files
      run: docker run -v $(pwd):/tmp/lambda_layer_ready pygit2-lambda-layer sh copy_zip.sh

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: devel/${{ matrix.python_versions }}
        release_name: pygit2_lambda_layer - python ${{ matrix.python_versions }}
        draft: true
        prerelease: true

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./pygit2_lambda_layer.zip
        asset_name: pygit2_lambda_layer_${{ matrix.python_versions }}.zip
        asset_content_type: application/zip
